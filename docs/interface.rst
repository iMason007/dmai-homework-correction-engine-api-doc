************************************************
接口描述
************************************************

.. contents:: 目录

1. 新增题库数据
======================================
1.1. 接口功能
--------------------------------------
新增题库中的教辅标注数据

1.2. 请求方式
--------------------------------------
POST http://am-daip.dev.dm-ai.cn/api/v1/subject

1.3. 请求参数说明
--------------------------------------
1.3.1. 请求头部(HTTP Header)

+--------------+--------------+--------------+----------------------------------------+
|    字段名    |   是否必选   |   数据类型   | 描述                                   |
+==============+==============+==============+========================================+
| token        | 是           | String       | 联系DM技术支持获得                     |
+--------------+--------------+--------------+----------------------------------------+

1.3.2. 请求体(Content-Type: JSON)

+---------------+---------------+---------------+----------------------------------------+
| 字段名        | 是否必选      | 数据类型      | 描述                                   |
+===============+===============+===============+========================================+
| cid           | 是            | String        | 科目id                                 |
+---------------+---------------+---------------+----------------------------------------+
| gid           | 是            | Int           | 年级id, 1~9代表1~9年级                 |
+---------------+---------------+---------------+----------------------------------------+
| bid           | 是            | String        | 书本id                                 |
+---------------+---------------+---------------+----------------------------------------+
| pid           | 是            | Int           | 题目所在的页码                         |
+---------------+---------------+---------------+----------------------------------------+
| question      | 是            | JSONArray     | 题目对象数组, 一个对象对应一道题目数据 |
+---------------+---------------+---------------+----------------------------------------+
| image         | 是            | String        | image base64编码                       |
+---------------+---------------+---------------+----------------------------------------+

1.4. 正确请求示例
--------------------------------------
.. code-block:: python

    token: Tfbzvepj0rrpwkbPhm9CuhIe6jtiCDth
    --------------------------------------
    {
        "cid": "5e1484a550ed1d14e8a09eed",
        "gid": 6,
        "bid": "5e1484a550ed1d14e8a09eed",
        "pid": 101,
        "question": [{....},{...}],
        "image": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
    }

1.5. 返回数据说明(Content-type: JSON)
--------------------------------------

+---------------+---------------------+---------------+--------------------------------------------------------+
| 字段名        | 是否必选            | 数据类型      | 说明                                                   |
+===============+=====================+===============+========================================================+
| code          | 是                  | Int           | code为0时, 业务正常, code不为0时, 业务出错             |
+---------------+---------------------+---------------+--------------------------------------------------------+
| data          | 否(code为0时返回)   | String        | 输出"数据新增成功"                                     |
+---------------+---------------+---------------+--------------------------------------------------------------+
| error         | 否(code不为0时返回) | String        | 当code不为0时, 输出 "没有该字信息, 请重新选择测试图片" |
+---------------+---------------+---------------+--------------------------------------------------------------+

1.6. 正确返回示例
--------------------------------------
.. code-block::

    {
        "code": 0,
        "data": "数据新增成功"
    }

1.7. 错误返回示例
--------------------------------------
.. code-block::

    {
        "code": 401,
        "error": "invalid token"
    }

1.8. 错误码
--------------------------------------
+----------+------------------------------------------------+------------------------+
| 错误码   | 说明                                           | 修复方法               |
+==========+================================================+========================+
| 400      | 索引对应的题库已存在                           |                        |
+----------+------------------------------------------------+------------------------+
| 401      | 鉴权失败                                       | 联系DM技术支持获取dmid |
+----------+------------------------------------------------+------------------------+
| 416      | 非法输入(输入数据与请求体定义不同)             |                        |
+----------+------------------------------------------------+------------------------+
| 501      | 数据入库失败(数据库连接失败, 数据库操作异常等) |                        |
+----------+------------------------------------------------+------------------------+
| 1101     | 获取特征向量失败                               |                        |
+----------+------------------------------------------------+------------------------+
| 1102     | 添加题目特征向量失败                           |                        |
+----------+------------------------------------------------+------------------------+

2. 查询题库数据
======================================
2.1. 接口功能
--------------------------------------
获取题库中的教辅标注数据

2.2. 请求方式
--------------------------------------
GET http://am-daip.dev.dm-ai.cn/api/v1/subject

2.3. 请求参数说明
--------------------------------------
2.3.1. 请求头部(HTTP Header)

+--------------+--------------+--------------+----------------------------------------+
|    字段名    |   是否必选   |   数据类型   | 描述                                   |
+==============+==============+==============+========================================+
| token        | 是           | String       | 联系DM技术支持获得                     |
+--------------+--------------+--------------+----------------------------------------+

2.3.2. 请求参数(Query)

+---------------+---------------+---------------+----------------------------------------+
| 字段名        | 是否必选      | 数据类型      | 描述                                   |
+===============+===============+===============+========================================+
| cid           | 是            | String        | 科目id                                 |
+---------------+---------------+---------------+----------------------------------------+
| gid           | 是            | Int           | 年级id, 1~9代表1~9年级                 |
+---------------+---------------+---------------+----------------------------------------+
| bid           | 是            | String        | 书本id                                 |
+---------------+---------------+---------------+----------------------------------------+
| pid           | 是            | Int           | 题目所在的页码                         |
+---------------+---------------+---------------+----------------------------------------+

2.4. 正确请求示例
--------------------------------------
.. code-block::

    token: Tfbzvepj0rrpwkbPhm9CuhIe6jtiCDth
    --------------------------------------
    /api/v1/subject?cid=5e1484a550ed1d14e8a09eed&gid=6&bid=5e1484a550ed1d14e8a09eed&pid=101

2.5. 返回数据说明(Content-type: JSON)
--------------------------------------

+---------------+---------------------+---------------+--------------------------------------------------------+
| 字段名        | 是否必选            | 数据类型      | 说明                                                   |
+===============+=====================+===============+========================================================+
| code          | 是                  | Int           | code为0时, 业务正常, code不为0时, 业务出错             |
+---------------+---------------------+---------------+--------------------------------------------------------+
| data          | 否(code为0时返回)   | JSONObject    | 具体的返回数据(见data字段说明)                         |
+---------------+---------------+---------------+--------------------------------------------------------------+
| error         | 否(code不为0时返回) | String        | 当code不为0时, 输出 "没有该字信息, 请重新选择测试图片" |
+---------------+---------------+---------------+--------------------------------------------------------------+

data字段说明

+---------------+---------------+--------------------------------------------------------+
| 字段名        | 数据类型      | 说明                                                   |
+===============+===============+========================================================+
| data          | JSONArray     | 标注题目数据                                           |
+---------------+---------------+--------------------------------------------------------+
| error         | String        | 题目图片的BASE64编码                                   |
+---------------+---------------+--------------------------------------------------------+

2.6. 正确返回示例
--------------------------------------
.. code-block::

    {
        "code":0,
        "data":[{
            "question":[{....},{...}],
            "image":"/9j/4AAQSkZJRgABAQAAAQABAAD..."
        }]
    }

2.7. 错误返回示例
--------------------------------------
.. code-block::

    {
        "code": 401,
        "error": "invalid token"
    }

2.8. 错误码
--------------------------------------
+----------+------------------------------------------------+------------------------+
| 错误码   | 说明                                           | 修复方法               |
+==========+================================================+========================+
| 401      | 鉴权失败                                       | 联系DM技术支持获取dmid |
+----------+------------------------------------------------+------------------------+
| 404      | 数据库检索不到对应数据                         |                        |
+----------+------------------------------------------------+------------------------+
| 416      | 非法输入(输入数据与请求体定义不同)             |                        |
+----------+------------------------------------------------+------------------------+
| 501      | 数据查询失败(数据库连接失败, 数据库操作异常等) |                        |
+----------+------------------------------------------------+------------------------+

3. 修改题库数据
======================================
3.1. 接口功能
--------------------------------------
修改题库中的教辅标注数据

3.2. 请求方式
--------------------------------------
PUT http://am-daip.dev.dm-ai.cn/api/v1/subject

3.3. 请求参数说明
--------------------------------------
3.3.1. 请求头部(HTTP Header)

+--------------+--------------+--------------+----------------------------------------+
|    字段名    |   是否必选   |   数据类型   | 描述                                   |
+==============+==============+==============+========================================+
| token        | 是           | String       | 联系DM技术支持获得                     |
+--------------+--------------+--------------+----------------------------------------+

3.3.2. 请求体(Content-Type: JSON)

+---------------+---------------+---------------+----------------------------------------+
| 字段名        | 是否必选      | 数据类型      | 描述                                   |
+===============+===============+===============+========================================+
| cid           | 是            | String        | 科目id                                 |
+---------------+---------------+---------------+----------------------------------------+
| gid           | 是            | Int           | 年级id, 1~9代表1~9年级                 |
+---------------+---------------+---------------+----------------------------------------+
| bid           | 是            | String        | 书本id                                 |
+---------------+---------------+---------------+----------------------------------------+
| pid           | 是            | Int           | 题目所在的页码                         |
+---------------+---------------+---------------+----------------------------------------+
| question      | 否            | JSONArray     | 题目对象数组, 一个对象对应一道题目数据 |
+---------------+---------------+---------------+----------------------------------------+
| image         | 否            | String        | image base64编码                       |
+---------------+---------------+---------------+----------------------------------------+

3.4. 正确请求示例
--------------------------------------
.. code-block::

    token: Tfbzvepj0rrpwkbPhm9CuhIe6jtiCDth
    --------------------------------------
    {
        "cid": "5e1484a550ed1d14e8a09eed",
        "gid": 6,
        "bid": "5e1484a550ed1d14e8a09eed",
        "pid": 101,
        "question": [{....},{...}],
        "image": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
    }

3.5. 返回数据说明(Content-type: JSON)
--------------------------------------

+---------------+---------------------+---------------+--------------------------------------------------------+
| 字段名        | 是否必选            | 数据类型      | 说明                                                   |
+===============+=====================+===============+========================================================+
| code          | 是                  | Int           | code为0时, 业务正常, code不为0时, 业务出错             |
+---------------+---------------------+---------------+--------------------------------------------------------+
| data          | 否(code为0时返回)   | String        | 输出"数据修改成功"                                     |
+---------------+---------------+---------------+--------------------------------------------------------------+
| error         | 否(code不为0时返回) | String        | 当code不为0时, 输出 "没有该字信息, 请重新选择测试图片" |
+---------------+---------------+---------------+--------------------------------------------------------------+

3.6. 正确返回示例
--------------------------------------
.. code-block::

    {
        "code":0,
        "data":"数据修改成功"
    }

3.7. 错误返回示例
--------------------------------------
.. code-block::

    {
        "code": 401,
        "error": "invalid token"
    }

3.8. 错误码
--------------------------------------
+----------+------------------------------------------------+------------------------+
| 错误码   | 说明                                           | 修复方法               |
+==========+================================================+========================+
| 401      | 鉴权失败                                       | 联系DM技术支持获取dmid |
+----------+------------------------------------------------+------------------------+
| 416      | 非法输入(输入数据与请求体定义不同)             |                        |
+----------+------------------------------------------------+------------------------+
| 501      | 数据查询失败(数据库连接失败, 数据库操作异常等) |                        |
+----------+------------------------------------------------+------------------------+
| 1101     | 获取特征向量失败                               |                        |
+----------+------------------------------------------------+------------------------+
| 1102     | 添加题目特征向量失败                           |                        |
+----------+------------------------------------------------+------------------------+

4. 查询题库数据
======================================
4.1. 接口功能
--------------------------------------
删除题库中的教辅标注数据

4.2. 请求方式
--------------------------------------
DELETE http://am-daip.dev.dm-ai.cn/api/v1/subject

4.3. 请求参数说明
--------------------------------------
4.3.1. 请求头部(HTTP Header)

+--------------+--------------+--------------+----------------------------------------+
|    字段名    |   是否必选   |   数据类型   | 描述                                   |
+==============+==============+==============+========================================+
| token        | 是           | String       | 联系DM技术支持获得                     |
+--------------+--------------+--------------+----------------------------------------+

4.3.2. 请求参数(Query)

+---------------+---------------+---------------+----------------------------------------+
| 字段名        | 是否必选      | 数据类型      | 描述                                   |
+===============+===============+===============+========================================+
| cid           | 是            | String        | 科目id                                 |
+---------------+---------------+---------------+----------------------------------------+
| gid           | 是            | Int           | 年级id, 1~9代表1~9年级                 |
+---------------+---------------+---------------+----------------------------------------+
| bid           | 是            | String        | 书本id                                 |
+---------------+---------------+---------------+----------------------------------------+
| pid           | 是            | Int           | 题目所在的页码                         |
+---------------+---------------+---------------+----------------------------------------+

4.4. 正确请求示例
--------------------------------------
.. code-block::

    token: Tfbzvepj0rrpwkbPhm9CuhIe6jtiCDth
    --------------------------------------
    /api/v1/subject?cid=5e1484a550ed1d14e8a09eed&gid=6&bid=5e1484a550ed1d14e8a09eed&pid=101

4.5. 返回数据说明(Content-type: JSON)
--------------------------------------

+---------------+---------------------+---------------+--------------------------------------------------------+
| 字段名        | 是否必选            | 数据类型      | 说明                                                   |
+===============+=====================+===============+========================================================+
| code          | 是                  | Int           | code为0时, 业务正常, code不为0时, 业务出错             |
+---------------+---------------------+---------------+--------------------------------------------------------+
| data          | 否(code为0时返回)   | String        | 输出"数据删除成功"                                     |
+---------------+---------------+---------------+--------------------------------------------------------------+
| error         | 否(code不为0时返回) | String        | 当code不为0时, 输出 "没有该字信息, 请重新选择测试图片" |
+---------------+---------------+---------------+--------------------------------------------------------------+

4.6. 正确返回示例
--------------------------------------
.. code-block::

    {
        "code":0,
        "data":"数据删除成功"
    }

4.7. 错误返回示例
--------------------------------------
.. code-block::

    {
        "code": 401,
        "error": "invalid token"
    }

4.8. 错误码
--------------------------------------
+----------+------------------------------------------------+------------------------+
| 错误码   | 说明                                           | 修复方法               |
+==========+================================================+========================+
| 401      | 鉴权失败                                       | 联系DM技术支持获取dmid |
+----------+------------------------------------------------+------------------------+
| 404      | 数据库检索不到对应数据                         |                        |
+----------+------------------------------------------------+------------------------+
| 416      | 非法输入(输入数据与请求体定义不同)             |                        |
+----------+------------------------------------------------+------------------------+
| 501      | 数据删除失败(数据库连接失败, 数据库操作异常等) |                        |
+----------+------------------------------------------------+------------------------+

5. 提交教辅批改
======================================
5.1. 接口功能
--------------------------------------
输入一张教辅图片，后台自动批改教辅内容，返回批改结果

5.2. 请求方式
--------------------------------------
POST http://am-daip.dev.dm-ai.cn/api/v1/correction/full-page/mixed

5.3. 请求参数说明
--------------------------------------
5.3.1. 请求头部(HTTP Header)

+--------------+--------------+--------------+----------------------------------------+
|    字段名    |   是否必选   |   数据类型   | 描述                                   |
+==============+==============+==============+========================================+
| dmid         | 是           | String       | 联系DM技术支持获得                     |
+--------------+--------------+--------------+----------------------------------------+

5.3.2. 请求参数(Query)

+---------------+---------------+---------------+----------------------------------------+
| 字段名        | 是否必选      | 数据类型      | 描述                                   |
+===============+===============+===============+========================================+
| image         | 否            | String        | image base64编码                       |
+---------------+---------------+---------------+----------------------------------------+

5.4. 正确请求示例
--------------------------------------
.. code-block::

    dmid: Tfbzvepj0rrpwkbPhm9CuhIe6jtiCDth
    --------------------------------------
    {
        "image": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
    }

5.5. 返回数据说明(Content-type: JSON)
--------------------------------------

+---------------+---------------------+---------------+--------------------------------------------------------+
| 字段名        | 是否必选            | 数据类型      | 说明                                                   |
+===============+=====================+===============+========================================================+
| code          | 是                  | Int           | code为0时, 业务正常, code不为0时, 业务出错             |
+---------------+---------------------+---------------+--------------------------------------------------------+
| data          | 否(code为0时返回)   | JSONObject    | 具体的返回数据(见data字段说明)                         |
+---------------+---------------+---------------+--------------------------------------------------------------+
| error         | 否(code不为0时返回) | String        | 当code不为0时, 输出 "没有该字信息, 请重新选择测试图片" |
+---------------+---------------+---------------+--------------------------------------------------------------+

data字段说明

+---------------+--------------------------------------+--------------------------------------------------------+
| 字段名        | 数据类型                             | 说明                                                   |
+===============+======================================+========================================================+
| request_id    | String                               | 请求唯一ID, 由系统生成                                 |
+---------------+--------------------------------------+--------------------------------------------------------+
| result        | JSONObject或者JSONArray.<JSONObject> | 题目图片的BASE64编码                                   |
+---------------+--------------------------------------+--------------------------------------------------------+

5.6. 正确返回示例
--------------------------------------
.. code-block::

    {
        "code": 0,
        "data": {
            "requredId": "full_page_mixed",
            "result": [
                {
                    "points": [
                        [
                            82.20689655172418,
                            175.6551724137931
                        ],
                        [
                            1475.3103448275865,
                            398.0689655172414
                        ]
                    ],
                    "result": [
                        {
                            "answer": "48",
                            "is_correct": "True",
                            "latex": "$ 1 2 \\times 4 = 4 8 $",
                            "points": [
                                104.62068965517255,
                                246.34482758620692,
                                397.72413793103465,
                                246.34482758620692,
                                104.62068965517255,
                                304.96551724137936,
                                397.72413793103465,
                                304.96551724137936
                            ]
                        },
                        {
                            "answer": "114",
                            "is_correct": "True",
                            "latex": "$ 7 6 + 3 8 = 1 1 4 $",
                            "points": [
                                589.1034482758621,
                                251.51724137931035,
                                927.0344827586209,
                                251.51724137931035,
                                589.1034482758621,
                                299.7931034482759,
                                927.0344827586209,
                                299.7931034482759
                            ]
                        },
                        {
                            "answer": "\\frac{4}{5}",
                            "is_correct": "True",
                            "latex": "$ \\frac { 1 } { 2 } \\times 1 \\frac { 3 } { 5 } = \\frac { 4 } { 5 } $",
                            "points": [
                                1068.4137931034484,
                                232.55172413793105,
                                1394.2758620689656,
                                232.55172413793105,
                                1068.4137931034484,
                                317.0344827586207,
                                1394.2758620689656,
                                317.0344827586207
                            ]
                        },
                        {
                            "answer": "1.5",
                            "is_correct": "True",
                            "latex": "$ 0 . 5 \\times 3 = 1 . 5 $",
                            "points": [
                                104.62068965517255,
                                311.86206896551727,
                                404.62068965517255,
                                311.86206896551727,
                                104.62068965517255,
                                361.86206896551727,
                                404.62068965517255,
                                361.86206896551727
                            ]
                        },
                        {
                            "answer": "42",
                            "is_correct": "False",
                            "latex": "$ 1 2 1 - 7 9 = 5 2 $",
                            "points": [
                                587.3793103448277,
                                311.86206896551727,
                                932.2068965517242,
                                311.86206896551727,
                                587.3793103448277,
                                367.0344827586207,
                                932.2068965517242,
                                367.0344827586207
                            ]
                        },
                        {
                            "answer": "12",
                            "is_correct": "True",
                            "latex": "$ 1 4 4 \\div 1 2 = 1 2 $",
                            "points": [
                                1073.586206896552,
                                318.7586206896552,
                                1392.5517241379312,
                                318.7586206896552,
                                1073.586206896552,
                                375.65517241379314,
                                1392.5517241379312,
                                375.65517241379314
                            ]
                        }
                    ],
                    "type": "表达式"
                },
                {
                    "points": [
                        [
                            77.0344827586207,
                            398.0689655172414
                        ],
                        [
                            1477.034482758621,
                            563.5862068965517
                        ]
                    ],
                    "result": [
                        {
                            "answer": "<",
                            "is_correct": "False",
                            "latex": "$ 1 2 \\times 4 0 \\bigcirc { > } 5 0 0 $",
                            "points": [
                                109.79310344827604,
                                449.7931034482759,
                                323.58620689655186,
                                449.7931034482759,
                                109.79310344827604,
                                491.1724137931035,
                                323.58620689655186,
                                491.1724137931035
                            ]
                        },
                        {
                            "answer": "<",
                            "is_correct": "True",
                            "latex": "$ 1 0 0 0 \\bigcirc { < } 1 2 0 \\times 1 2 $",
                            "points": [
                                594.2758620689656,
                                453.2413793103449,
                                846.0000000000002,
                                453.2413793103449,
                                594.2758620689656,
                                492.89655172413796,
                                846.0000000000002,
                                492.89655172413796
                            ]
                        },
                        {
                            "answer": "=",
                            "is_correct": "True",
                            "latex": "$ 4 6 \\times 2 0 0 \\bigcirc { = } 4 6 0 \\times 2 0 $",
                            "points": [
                                111.51724137931046,
                                494.62068965517244,
                                396.0,
                                494.62068965517244,
                                111.51724137931046,
                                537.7241379310345,
                                396.0,
                                537.7241379310345
                            ]
                        },
                        {
                            "answer": "<",
                            "is_correct": "False",
                            "latex": "$ 1 0 5 \\times 1 3 \\bigcirc { > } 1 0 3 \\times 1 5 $",
                            "points": [
                                597.7241379310346,
                                496.3448275862069,
                                883.9310344827588,
                                496.3448275862069,
                                597.7241379310346,
                                537.7241379310345,
                                883.9310344827588,
                                537.7241379310345
                            ]
                        }
                    ],
                    "type": "表达式"
                },
                {
                    "points": [
                        [
                            87.37931034482767,
                            661.8620689655173
                        ],
                        [
                            1451.1724137931037,
                            827.3793103448277
                        ]
                    ],
                    "result": [
                        {
                            "answer": "305",
                            "is_correct": "True",
                            "latex": "$ 3 0 5 0 0 0 0 = ( 3 0 5 ) $ 万",
                            "points": [
                                111.51724137931046,
                                703.2413793103449,
                                406.344827586207,
                                703.2413793103449,
                                111.51724137931046,
                                751.5172413793103,
                                406.344827586207,
                                751.5172413793103
                            ]
                        },
                        {
                            "answer": "3.38",
                            "is_correct": "True",
                            "latex": "3 3 8 厘 米 $ = ( 3 . 3 8 ) $ 米",
                            "points": [
                                592.5517241379312,
                                708.4137931034484,
                                873.5862068965519,
                                708.4137931034484,
                                592.5517241379312,
                                749.7931034482759,
                                873.5862068965519,
                                749.7931034482759
                            ]
                        },
                        {
                            "answer": "1.48",
                            "is_correct": "True",
                            "latex": "$ 1 4 8 0 0 0 0 0 0 = ( 1 . 4 8 ) $ 亿",
                            "points": [
                                113.24137931034488,
                                751.5172413793103,
                                428.75862068965534,
                                751.5172413793103,
                                113.24137931034488,
                                796.344827586207,
                                428.75862068965534,
                                796.344827586207
                            ]
                        },
                        {
                            "answer": "0.7",
                            "is_correct": "False",
                            "latex": "7 4 6 千 克 $ \\approx ( 0 . 7 ) $ 吨 （ 保 留 1 位 小 数 ）",
                            "points": [
                                596.0000000000002,
                                749.7931034482759,
                                1070.1379310344828,
                                749.7931034482759,
                                596.0000000000002,
                                801.5172413793103,
                                1070.1379310344828,
                                801.5172413793103
                            ]
                        }
                    ],
                    "type": "表达式"
                }
            ]
        },
        "error": "Success"
    }

5.7. 错误返回示例
--------------------------------------
.. code-block::

    {
        "code": 401,
        "error": "invalid token"
    }

5.8. 错误码
--------------------------------------
+----------+------------------------------------------------+------------------------+
| 错误码   | 说明                                           | 修复方法               |
+==========+================================================+========================+
| 400      | 请求参数有误                                   |                        |
+----------+------------------------------------------------+------------------------+
| 401      | 鉴权失败                                       | 联系DM技术支持获取dmid |
+----------+------------------------------------------------+------------------------+
| 500      | 服务器内部错误                                 |                        |
+----------+------------------------------------------------+------------------------+
